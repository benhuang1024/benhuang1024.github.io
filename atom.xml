<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>ben&#39;s blog - 如果今天和昨天没有任何区别，那么明天又有什么意义</title>
  <subtitle>人生当苦无妨，良人当归就好</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://blog.benhuang1024.com/"/>
  <updated>2016-09-23T03:06:47.582Z</updated>
  <id>http://blog.benhuang1024.com/</id>
  
  <author>
    <name>Ben Huang</name>
    <email>benhuang1024@gmail.com</email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title></title>
    <link href="http://blog.benhuang1024.com/2016/09/23/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/"/>
    <id>http://blog.benhuang1024.com/2016/09/23/微信小程序/</id>
    <published>2016-09-23T03:06:47.582Z</published>
    <updated>2016-09-23T03:06:47.582Z</updated>
    
    <content type="html">&lt;p&gt;K，为了让大家尽快看到这份教程，博卡君注定要熬夜了！今晚开始更新，希望明天一早就能发布第一篇教程！记录开始！看看几天能完成变身吧！&lt;/p&gt;
&lt;p&gt;序言&lt;/p&gt;
&lt;p&gt;开始开发应用号之前，先看看官方公布的「小程序」教程吧！（以下内容来自微信官方公布的「小程序」开发指南）&lt;/p&gt;
&lt;p&gt;本文档将带你一步步创建完成一个微信小程序，并可以在手机上体验该小程序的实际效果。这个小程序的首页将会显示欢迎语以及当前用户的微信头像，点击头像，可以在新开的页面中查看当前小程序的启动日志。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;获取微信小程序的 AppID&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;首先，我们需要拥有一个帐号，如果你能看到该文档，我们应当已经邀请并为你创建好一个帐号。注意不可直接使用服务号或订阅号的 AppID。 利用提供的帐号，登录 &lt;a href=&quot;https://mp.weixin.qq.com&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://mp.weixin.qq.com&lt;/a&gt; ，就可以在网站的「设置」-「开发者设置」中，查看到微信小程序的 AppID 了。&lt;/p&gt;
&lt;p&gt;注意：如果我们不是用注册时绑定的管理员微信号，在手机上体验该小程序。那么我们还需要操作「绑定开发者」。即在「用户身份 - 开发者」模块，绑定上需要体验该小程序的微信号。本教程默认注册帐号、体验都是使用管理员微信号。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;创建项目&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;我们需要通过开发者工具，来完成小程序创建和代码编辑。&lt;/p&gt;
&lt;p&gt;开发者工具安装完成后，打开并使用微信扫码登录。选择创建「项目」，填入上文获取到的 AppID，设置一个本地项目的名称（非小程序名称），比如「我的第一个项目」，并选择一个本地的文件夹作为代码存储的目录，点击「新建项目」就可以了。&lt;/p&gt;
&lt;p&gt;为方便初学者了解微信小程序的基本代码结构，在创建过程中，如果选择的本地文件夹是个空文件夹，开发者工具会提示，是否需要创建一个 quick start 项目。选择「是」，开发者工具会帮助我们在开发目录里生成一个简单的 demo。&lt;/p&gt;
&lt;p&gt;项目创建成功后，我们就可以点击该项目，进入并看到完整的开发者工具界面，点击左侧导航，在「编辑」里可以查看和编辑我们的代码，在「调试」里可以测试代码并模拟小程序在微信客户端效果，在「项目」里可以发送到手机里预览实际效果。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;编写代码&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;点击开发者工具左侧导航的「编辑」，我们可以看到这个项目，已经初始化并包含了一些简单的代码文件。最关键也是必不可少的，是 app.js、app.json、app.wxss 这三个。其中，.js 后缀的是脚本文件，.json 后缀的文件是配置文件，.wxss 后缀的是样式表文件。微信小程序会读取这些文件，并生成小程序实例。&lt;/p&gt;
&lt;p&gt;下面我们简单了解这三个文件的功能，方便修改以及从头开发自己的微信小程序。&lt;/p&gt;
&lt;p&gt;app.js 是小程序的脚本代码。我们可以在这个文件中监听并处理小程序的生命周期函数、声明全局变量。调用 MINA 提供的丰富的 API，如本例的同步存储及同步读取本地数据。&lt;/p&gt;
&lt;p&gt;//app.js&lt;/p&gt;
&lt;p&gt;App({&lt;/p&gt;
&lt;p&gt;  onLaunch: function () {&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;// 调用 API 从本地缓存中获取数据

var logs = wx.getStorageSync(&amp;apos;logs&amp;apos;) || []

logs.unshift(Date.now())

wx.setStorageSync(&amp;apos;logs&amp;apos;, logs)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;  },&lt;/p&gt;
&lt;p&gt;  getUserInfo:function(cb){&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;var that = this;

if(this.globalData.userInfo){

  typeof cb == &amp;quot;function&amp;quot; &amp;amp;&amp;amp; cb(this.globalData.userInfo)

}else{



  // 调用登录接口

  wx.login({

    success: function () {

      wx.getUserInfo({

        success: function (res) {

          that.globalData.userInfo = res.userInfo;

          typeof cb == &amp;quot;function&amp;quot; &amp;amp;&amp;amp; cb(that.globalData.userInfo)

        }

      })

    }

  });

}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;  },&lt;/p&gt;
&lt;p&gt;  globalData:{&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;userInfo:null
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;  }&lt;/p&gt;
&lt;p&gt;})&lt;br&gt;app.json 是对整个小程序的全局配置。我们可以在这个文件中配置小程序是由哪些页面组成，配置小程序的窗口  背景色，配置导航条样式，配置默认标题。注意该文件不可添加任何注释。&lt;/p&gt;
&lt;p&gt;/&lt;em&gt;*app.json&lt;/em&gt;/&lt;br&gt;{&lt;/p&gt;
&lt;p&gt;  “pages”:[&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;quot;pages/index/index&amp;quot;,

&amp;quot;pages/logs/logs&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;  ],&lt;/p&gt;
&lt;p&gt;  “window”:{&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;quot;backgroundTextStyle&amp;quot;:&amp;quot;light&amp;quot;,

&amp;quot;navigationBarBackgroundColor&amp;quot;: &amp;quot;#fff&amp;quot;,

&amp;quot;navigationBarTitleText&amp;quot;: &amp;quot;WeChat&amp;quot;,

&amp;quot;navigationBarTextStyle&amp;quot;:&amp;quot;black&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;  }&lt;/p&gt;
&lt;p&gt;}&lt;br&gt;app.wxss 是整个小程序的公共样式表。我们可以在页面组件的 class 属性上直接使用 app.wxss 中声明的样式规则。&lt;/p&gt;
&lt;p&gt;/&lt;strong&gt;app.wxss&lt;/strong&gt;/&lt;/p&gt;
&lt;p&gt;.container {&lt;/p&gt;
&lt;p&gt;  height: 100%;&lt;/p&gt;
&lt;p&gt;  display: flex;&lt;/p&gt;
&lt;p&gt;  flex-direction: column;&lt;/p&gt;
&lt;p&gt;  align-items: center;&lt;/p&gt;
&lt;p&gt;  justify-content: space-between;&lt;/p&gt;
&lt;p&gt;  padding: 200rpx 0;&lt;/p&gt;
&lt;p&gt;  box-sizing: border-box;&lt;/p&gt;
&lt;p&gt;}&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;创建页面&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;在这个教程里，我们有两个页面，index 页面和 logs 页面，即欢迎页和小程序启动日志的展示页，他们都在 pages 目录下。微信小程序中的每一个页面的【路径 + 页面名】都需要写在 app.json 的 pages 中，且 pages 中的第一个页面是小程序的首页。&lt;/p&gt;
&lt;p&gt;每一个小程序页面是由同路径下同名的四个不同后缀文件的组成，如：index.js、index.wxml、index.wxss、index.json。.js 后缀的文件是脚本文件，.json 后缀的文件是配置文件，.wxss 后缀的是样式表文件，.wxml 后缀的文件是页面结构文件。&lt;/p&gt;
&lt;p&gt;index.wxml 是页面的结构文件：&lt;/p&gt;
&lt;!--index.wxml--&gt;
&lt;view class=&quot;container&quot;&gt;&lt;br&gt;&lt;br&gt;  &lt;view bindtap=&quot;bindViewTap&quot; class=&quot;userinfo&quot;&gt;&lt;br&gt;&lt;br&gt;    &lt;image class=&quot;userinfo-avatar&quot; src=&quot;&quot; background-size=&quot;cover&quot;&gt;&lt;/image&gt;&lt;br&gt;&lt;br&gt;    &lt;text class=&quot;userinfo-nickname&quot;&gt;&lt;/text&gt;&lt;br&gt;&lt;br&gt;  &lt;/view&gt;

  &lt;view class=&quot;usermotto&quot;&gt;&lt;br&gt;&lt;br&gt;    &lt;text class=&quot;user-motto&quot;&gt;&lt;/text&gt;&lt;br&gt;&lt;br&gt;  &lt;/view&gt;

&lt;p&gt;&lt;/p&gt;&lt;/view&gt;&lt;br&gt;本例中使用了 &lt;view&gt;、&lt;image&gt;、&lt;text&gt; 来搭建页面结构，绑定数据和交互处理函数。&lt;p&gt;&lt;/p&gt;
&lt;p&gt;index.js 是页面的脚本文件，在这个文件中我们可以监听并处理页面的生命周期函数、获取小程序实例，声明并处理数据，响应页面交互事件等。&lt;/p&gt;
&lt;p&gt;//index.js&lt;/p&gt;
&lt;p&gt;// 获取应用实例&lt;/p&gt;
&lt;p&gt;var app = getApp()&lt;/p&gt;
&lt;p&gt;Page({&lt;/p&gt;
&lt;p&gt;  data: {&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;motto: &amp;apos;Hello World&amp;apos;,

userInfo: {}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;  },&lt;/p&gt;
&lt;p&gt;  // 事件处理函数&lt;/p&gt;
&lt;p&gt;  bindViewTap: function() {&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;wx.navigateTo({

  url: &amp;apos;../logs/logs&amp;apos;

})
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;  },&lt;/p&gt;
&lt;p&gt;  onLoad: function () {&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;console.log(&amp;apos;onLoad&amp;apos;)

var that = this

// 调用应用实例的方法获取全局数据

app.getUserInfo(function(userInfo){

  // 更新数据

  that.setData({

    userInfo:userInfo

  })

})
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;  }&lt;/p&gt;
&lt;p&gt;})&lt;br&gt;index.wxss 是页面的样式表：&lt;/p&gt;
&lt;p&gt;/&lt;strong&gt;index.wxss&lt;/strong&gt;/&lt;/p&gt;
&lt;p&gt;.userinfo {&lt;/p&gt;
&lt;p&gt;  display: flex;&lt;/p&gt;
&lt;p&gt;  flex-direction: column;&lt;/p&gt;
&lt;p&gt;  align-items: center;&lt;/p&gt;
&lt;p&gt;}&lt;/p&gt;
&lt;p&gt;.userinfo-avatar {&lt;/p&gt;
&lt;p&gt;  width: 128rpx;&lt;/p&gt;
&lt;p&gt;  height: 128rpx;&lt;/p&gt;
&lt;p&gt;  margin: 20rpx;&lt;/p&gt;
&lt;p&gt;  border-radius: 50%;&lt;/p&gt;
&lt;p&gt;}&lt;/p&gt;
&lt;p&gt;.userinfo-nickname {&lt;/p&gt;
&lt;p&gt;  color: #aaa;&lt;/p&gt;
&lt;p&gt;}&lt;/p&gt;
&lt;p&gt;.usermotto {&lt;/p&gt;
&lt;p&gt;  margin-top: 200px;&lt;/p&gt;
&lt;p&gt;}&lt;br&gt;页面的样式表是非必要的。当有页面样式表时，页面的样式表中的样式规则会层叠覆盖 app.wxss 中的样式规则。如果不指定页面的样式表，也可以在页面的结构文件中直接使用 app.wxss 中指定的样式规则。&lt;/p&gt;
&lt;p&gt;index.json 是页面的配置文件：&lt;/p&gt;
&lt;p&gt;页面的配置文件是非必要的。当有页面的配置文件时，配置项在该页面会覆盖 app.json 的 window 中相同的配置项。如果没有指定的页面配置文件，则在该页面直接使用 app.json 中的默认配置。&lt;/p&gt;
&lt;p&gt;logs 的页面结构&lt;/p&gt;
&lt;!--logs.wxml--&gt;
&lt;view class=&quot;container log-list&quot;&gt;

  &lt;block wx:for-items=&quot;&quot; wx:for-item=&quot;log&quot;&gt;&lt;br&gt;&lt;br&gt;    &lt;text class=&quot;log-item&quot;&gt;NaN. &lt;/text&gt;&lt;br&gt;&lt;br&gt;  &lt;/block&gt;

&lt;p&gt;&lt;/p&gt;&lt;/view&gt;&lt;br&gt;logs 页面使用 &lt;block&gt; 控制标签来组织代码，在 &lt;block&gt; 上使用 wx:for-items 绑定 logs 数据，并将 logs 数据循环展开节点&lt;p&gt;&lt;/p&gt;
&lt;p&gt;//logs.js&lt;/p&gt;
&lt;p&gt;var util = require(‘../../utils/util.js’)&lt;/p&gt;
&lt;p&gt;Page({&lt;/p&gt;
&lt;p&gt;  data: {&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;logs: []
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;  },&lt;/p&gt;
&lt;p&gt;  onLoad: function () {&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;this.setData({

  logs: (wx.getStorageSync(&amp;apos;logs&amp;apos;) || []).map(function (log) {

    return util.formatTime(new Date(log))

  })

})
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;  }&lt;/p&gt;
&lt;p&gt;})&lt;br&gt;运行结果如下：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;手机预览&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;开发者工具左侧菜单栏选择「项目」，点击「预览」，扫码后即可在微信客户端中体验。&lt;/p&gt;
&lt;p&gt;目前，预览和上传功能尚无法实现，需要等待微信官方的下一步更新。&lt;/p&gt;
&lt;p&gt;如你所见，微信官方给出的开发指南还非常简单，很多细节、代码和功能都没有明确的展示，所以接下来就到博卡君展示实力的时候啦！开发教程正式开始！&lt;/p&gt;
&lt;p&gt;第一章：准备工作&lt;/p&gt;
&lt;p&gt;做好准备工作很重要。开发一个微信应用号，你需要提前到微信的官方网站（weixin.qq.com）下载开发者工具。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;下载最新微信开发者工具，打开后你会看到该界面：&lt;/li&gt;
&lt;/ol&gt;
&lt;ol&gt;
&lt;li&gt;点击「新建 web+」项目，随后出现如下画面：&lt;/li&gt;
&lt;/ol&gt;
&lt;ol&gt;
&lt;li&gt;该页面内的各项内容需要注意——&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;AppID：依照官方解释来填。&lt;br&gt;Appname: 项目最外层文件夹名称，如你将其命名为「ABC」，则之后的全部项目内容均将保存在「/ABC/…」目录下。&lt;br&gt;本地开发目录：项目存放在本地的目录。&lt;br&gt;注：再次强调，如果你和团队成员共同开发该项目，则建议你们使用同样的目录名称及本地目录，以确保协同开发的统一性。如果你之前已有项目，则导入过程与以上内容近似，不再赘述。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;准备工作全部完成后，点击「新建项目」按钮，弹出框点「确定」。&lt;/li&gt;
&lt;/ol&gt;
&lt;ol&gt;
&lt;li&gt;如上图所示，此刻，微信开发者工具已经为你自动构建了一个初始的 demo 项目，该项目内包含了一个微信应用项目所需具备的基本内容和框架结构。点击项目名称（图中即「cards」）进入该项目，就能看到整个项目的基本架构了：&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;第二章：项目构架&lt;/p&gt;
&lt;p&gt;微信目前用户群体非常庞大，微信推出公众号以后，火爆程度大家都看得到，也同样推动着 h5 的高速发展，随着公众号业务的需求越来越复杂，应用号现在的到来也是恰到好处。我们团队具体看了一两次文档后发现，它提供给开发者的方式也在发生全面的改变，从操作 DOM 转为操作数据，基于微信提供的一个过桥工具实现很多 h5 在公众号很难实现的功能，有点类似于 hybrid 开发，不同于 hybrid 开发的方式是：微信开放的接口更为严谨，结构必须采用他提供给我们的组件，外部的框架和插件都不能在这里使用上，让开发者完全脱离操作 DOM，开发思想转变很大。&lt;/p&gt;
&lt;p&gt;工欲善其事，必先利其器。理解它的核心功能非常重要，先了解它的整个运作流程。&lt;/p&gt;
&lt;p&gt;生命周期：&lt;/p&gt;
&lt;p&gt;在index.js里面：&lt;/p&gt;
&lt;p&gt;开发者工具上 Console 可以看到：&lt;/p&gt;
&lt;p&gt;在首页 console 可以看出顺序是 App Launch–&amp;gt;App Show–&amp;gt;onload–&amp;gt;onShow–&amp;gt;onReady。&lt;/p&gt;
&lt;p&gt;首先是整个 app 的启动与显示，app 的启动在 app.js 里面可以配置，其次再进入到各个页面的加载显示等等。&lt;/p&gt;
&lt;p&gt;可以想象到这里可以处理很多东西了，如加载框之类的都可以实现等等。&lt;/p&gt;
&lt;p&gt;路由：&lt;/p&gt;
&lt;p&gt;路由在项目开发中一直是个核心点，在这里其实微信对路由的介绍很少，可见微信在路由方面经过很好的封装，也提供三个跳转方法。&lt;/p&gt;
&lt;p&gt;wx.navigateTo(OBJECT)：保留当前页面，跳转到应用内的某个页面，使用wx.navigateBack可以返回到原页面。&lt;/p&gt;
&lt;p&gt;wx.redirectTo(OBJECT)：关闭当前页面，跳转到应用内的某个页面。&lt;/p&gt;
&lt;p&gt;wx.navigateBack()：关闭当前页面，回退前一页面。&lt;/p&gt;
&lt;p&gt;这三个基本上使用足够，在路由方面微信封装的很好，开发者根本不用去配置路由，往往很多框架在路由方面配置很繁琐。&lt;/p&gt;
&lt;p&gt;组件：&lt;/p&gt;
&lt;p&gt;此次微信在组件提供方面也是非常全面，基本上满足项目需求，故而开发速度非常快，开发前可以认真浏览几次，开发效率会很好。&lt;/p&gt;
&lt;p&gt;其它：&lt;/p&gt;
&lt;p&gt;任何外部框架以及插件基本上无法使用，就算原生的 js 插件也很难使用，因为以前我们的 js 插件也基本上全部是一操作 dom 的形式存在，而微信应用号此次的架构是不允许操作任何 dom，就连以前我们习惯使用的动态设置的rem.js也是不支持的。&lt;/p&gt;
&lt;p&gt;此次微信还提供了 WebSocket，就可以直接利用它做聊天，可以开发的空间非常大。&lt;/p&gt;
&lt;p&gt;跟公众号对比我们发现，开发应用号组件化，结构化，多样化。新大陆总是充满着惊喜，更多的彩蛋等着大家来发现。&lt;/p&gt;
&lt;p&gt;接下来开始搞一些简单的代码了！&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;找到项目文件夹，导入你的编辑器里面。在这里，我使用了 Sublime Text 编辑器。你可以根据自己的开发习惯选择自己喜欢的编辑器。&lt;/li&gt;
&lt;/ol&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;接下来，你需要根据自己的项目内容调整项目结构。在范例项目中，「card_course」目录下面主要包含了「tabBar」页面以及该应用的一些配置文件。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;示例项目的「tabBar」是五个菜单按钮：&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;ol&gt;
&lt;li&gt;找到「app.json」文件，用来配置这个五个菜单。在代码行中找到「”tabBar”」：&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;你可以根据实际项目需求更改，其中：&lt;/p&gt;
&lt;p&gt;「Color」是底部字体颜色，「selectedColor」是切换到该页面高亮颜色，「borderStyle」是切换菜单上面的一条线的颜色，「backgroundColor」是底部菜单栏背景颜色。文字描述较为抽象，建议你一一调试并查看其效果，加深印象。&lt;br&gt;「“list”」下的代码顺序必须依次放置，不能随便更改。&lt;br&gt;「”pagePath”」之后的文件名内，「.wxml」后缀被隐藏起来了，这是微信开发代码中人性化的一点——帮你节约写代码的时间，无须频繁声明文件后缀。&lt;br&gt;「”iconPath”」为未获得显示页面的图标路径，这两个路径可以直接是网络图标。&lt;br&gt;「”selectedIconPath”」为当前显示页面高亮图标路径，可以去掉，去掉之后会默认显示为「”iconPath”」的图标。&lt;br&gt;「”Text”」为页面标题，也可以去掉，去掉之后纯显示图标，如只去掉其中一个，该位置会被占用。&lt;br&gt;注意：微信的底部菜单最多支持五栏（五个 icons），所以在你设计微信应用的 UI 和基本架构时就要预先考虑好菜单栏的排布。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;根据以上代码规则，我做好了示例项目的基本架构，供你参考：&lt;/li&gt;
&lt;/ol&gt;
&lt;ol&gt;
&lt;li&gt;「Json」文件配置好后，「card_course」的基本结构入上图所示，不需要的子集都可以暂时删除，缺少的子集则需要你主动新建。删除子集时记得顺带检查一下「app.json」里的相关内容是否已经一并删除。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;注意：我个人建议你新建一个「wxml」文件的同时，把对应的「js」和「wxss」文件一起新建好，因为微信应用号的配置特点就是解析到一个「wxml」文件时，会同时在同级目录下找到同文件名的「js」和「wxss」文件，所以「js」文件需及时在「app.json」里预先配置好。&lt;/p&gt;
&lt;p&gt;编写「wxml」时，根据微信应用号提供的接口编码即可，大部分就是以前的「div」，而我们现在就用「view」即可。需要用其它子集时，可以根据微信提供的接口酌情选择。&lt;/p&gt;
&lt;p&gt;使用「class」名来设置样式，「id」名在这里基本没有什么用处。主要操作数据，不操作「dom」。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;以上是示例项目首页的「wxml」编码。从图中就可以看出，实现一个页面代码量非常少。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;「Wxss」文件是引入的样式文件，你也可以直接在里面写样式，示例中采用的是引入方式：&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;ol&gt;
&lt;li&gt;修改代码后刷新一次，可以看到未设背景的「view」标签直接变成了粉色。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;注意：修改「wxml」和「wxss」下的内容后，直接 F5 刷新就能直接看到效果，修改「js」则需点击重启按钮才能看到效果。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;另外，公共样式可以在「app.wxss」里直接引用。&lt;/li&gt;
&lt;/ol&gt;
&lt;ol&gt;
&lt;li&gt;「Js」文件需要在「app.json」文件的「”page”」里预先配置好。为了项目结构清晰化，我在示例项目中的「index」首页同级目录新建其它四个页面文件，具体如下：&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;经过以上步骤，案例中的五个底部菜单就全部配置完毕了。&lt;/p&gt;
&lt;p&gt;我们的应用号开发教程将借「名片盒」公众号持续更新，滚动播出。&lt;/p&gt;
&lt;p&gt;关注「名片盒」公众号，回复「应用号」即可看到最新内容！&lt;/p&gt;
&lt;/block&gt;&lt;/block&gt;&lt;/text&gt;&lt;/image&gt;&lt;/view&gt;</content>
    
    <summary type="html">
    
      &lt;p&gt;K，为了让大家尽快看到这份教程，博卡君注定要熬夜了！今晚开始更新，希望明天一早就能发布第一篇教程！记录开始！看看几天能完成变身吧！&lt;/p&gt;
&lt;p&gt;序言&lt;/p&gt;
&lt;p&gt;开始开发应用号之前，先看看官方公布的「小程序」教程吧！（以下内容来自微信官方公布的「小程序」开发指南）&lt;/p
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>2016年9月1日新广告法，互联网新广告法，新广告法，百度竞价整理办法</title>
    <link href="http://blog.benhuang1024.com/2016/08/15/2016%E5%B9%B49%E6%9C%881%E6%97%A5%E6%96%B0%E5%B9%BF%E5%91%8A%E6%B3%95%E5%86%85%E5%AE%B9/"/>
    <id>http://blog.benhuang1024.com/2016/08/15/2016年9月1日新广告法内容/</id>
    <published>2016-08-15T02:10:10.000Z</published>
    <updated>2016-08-19T01:06:10.626Z</updated>
    
    <content type="html">&lt;p&gt;**国家工商行政管理总局令&lt;br&gt;第87号&lt;/p&gt;
&lt;p&gt;　　《互联网广告管理暂行办法》已经国家工商行政管理总局局务会议审议通过，现予公布，自2016年9月1日起施行。 &lt;/p&gt;
&lt;p&gt;　　局长 张茅&lt;/p&gt;
&lt;p&gt;　　2016年7月4日&lt;/p&gt;
&lt;p&gt;互联网广告管理暂行办法&lt;/p&gt;
&lt;p&gt;（2016年7月4日国家工商行政管理总局令第87号公布）&lt;/p&gt;
&lt;p&gt;　　第一条  为了规范互联网广告活动，保护消费者的合法权益，促进互联网广告业的健康发展，维护公平竞争的市场经济秩序，根据《中华人民共和国广告法》（以下简称广告法）等法律、行政法规，制定本办法。&lt;/p&gt;
&lt;p&gt;　　第二条  利用互联网从事广告活动，适用广告法和本办法的规定。&lt;/p&gt;
&lt;p&gt;　　第三条  本办法所称互联网广告，是指通过网站、网页、互联网应用程序等互联网媒介，以文字、图片、音频、视频或者其他形式,直接或者间接地推销商品或者服务的商业广告。&lt;/p&gt;
&lt;p&gt;　　前款所称互联网广告包括：&lt;/p&gt;
&lt;p&gt;　　（一）推销商品或者服务的含有链接的文字、图片或者视频等形式的广告；&lt;/p&gt;
&lt;p&gt;　　（二）推销商品或者服务的电子邮件广告；&lt;/p&gt;
&lt;p&gt;　　（三）推销商品或者服务的付费搜索广告；&lt;/p&gt;
&lt;p&gt;　　（四）推销商品或者服务的商业性展示中的广告，法律、法规和规章规定经营者应当向消费者提供的信息的展示依照其规定；&lt;/p&gt;
&lt;p&gt;　　（五）其他通过互联网媒介推销商品或者服务的商业广告。&lt;/p&gt;
&lt;p&gt;　　第四条  鼓励和支持广告行业组织依照法律、法规、规章和章程的规定，制定行业规范，加强行业自律，促进行业发展，引导会员依法从事互联网广告活动，推动互联网广告行业诚信建设。&lt;/p&gt;
&lt;p&gt;　　第五条  法律、行政法规规定禁止生产、销售的商品或者提供的服务，以及禁止发布广告的商品或者服务，任何单位或者个人不得在互联网上设计、制作、代理、发布广告。&lt;/p&gt;
&lt;p&gt;　　禁止利用互联网发布处方药和烟草的广告。&lt;/p&gt;
&lt;p&gt;　　第六条  医疗、药品、特殊医学用途配方食品、医疗器械、农药、兽药、保健食品广告等法律、行政法规规定须经广告审查机关进行审查的特殊商品或者服务的广告，未经审查，不得发布。&lt;/p&gt;
&lt;p&gt;　　第七条  互联网广告应当具有可识别性，显著标明“广告”，使消费者能够辨明其为广告。&lt;/p&gt;
&lt;p&gt;　　付费搜索广告应当与自然搜索结果明显区分。&lt;/p&gt;
&lt;p&gt;　　第八条  利用互联网发布、发送广告，不得影响用户正常使用网络。在互联网页面以弹出等形式发布的广告，应当显著标明关闭标志，确保一键关闭。&lt;/p&gt;
&lt;p&gt;　　不得以欺骗方式诱使用户点击广告内容。&lt;/p&gt;
&lt;p&gt;　　未经允许，不得在用户发送的电子邮件中附加广告或者广告链接。&lt;/p&gt;
&lt;p&gt;　　第九条  互联网广告主、广告经营者、广告发布者之间在互联网广告活动中应当依法订立书面合同。&lt;/p&gt;
&lt;p&gt;　　第十条  互联网广告主应当对广告内容的真实性负责。&lt;/p&gt;
&lt;p&gt;　　广告主发布互联网广告需具备的主体身份、行政许可、引证内容等证明文件，应当真实、合法、有效。&lt;/p&gt;
&lt;p&gt;　　广告主可以通过自设网站或者拥有合法使用权的互联网媒介自行发布广告，也可以委托互联网广告经营者、广告发布者发布广告。&lt;/p&gt;
&lt;p&gt;　　互联网广告主委托互联网广告经营者、广告发布者发布广告，修改广告内容时，应当以书面形式或者其他可以被确认的方式通知为其提供服务的互联网广告经营者、广告发布者。&lt;/p&gt;
&lt;p&gt;　　第十一条  为广告主或者广告经营者推送或者展示互联网广告，并能够核对广告内容、决定广告发布的自然人、法人或者其他组织，是互联网广告的发布者。&lt;/p&gt;
&lt;p&gt;　　第十二条  互联网广告发布者、广告经营者应当按照国家有关规定建立、健全互联网广告业务的承接登记、审核、档案管理制度；审核查验并登记广告主的名称、地址和有效联系方式等主体身份信息，建立登记档案并定期核实更新。&lt;/p&gt;
&lt;p&gt;　　互联网广告发布者、广告经营者应当查验有关证明文件，核对广告内容，对内容不符或者证明文件不全的广告，不得设计、制作、代理、发布。&lt;/p&gt;
&lt;p&gt;　　互联网广告发布者、广告经营者应当配备熟悉广告法规的广告审查人员；有条件的还应当设立专门机构，负责互联网广告的审查。&lt;/p&gt;
&lt;p&gt;　　第十三条  互联网广告可以以程序化购买广告的方式，通过广告需求方平台、媒介方平台以及广告信息交换平台等所提供的信息整合、数据分析等服务进行有针对性地发布。&lt;/p&gt;
&lt;p&gt;　　通过程序化购买广告方式发布的互联网广告，广告需求方平台经营者应当清晰标明广告来源。&lt;/p&gt;
&lt;p&gt;　　第十四条  广告需求方平台是指整合广告主需求，为广告主提供发布服务的广告主服务平台。广告需求方平台的经营者是互联网广告发布者、广告经营者。&lt;/p&gt;
&lt;p&gt;　　媒介方平台是指整合媒介方资源，为媒介所有者或者管理者提供程序化的广告分配和筛选的媒介服务平台。&lt;/p&gt;
&lt;p&gt;　　广告信息交换平台是提供数据交换、分析匹配、交易结算等服务的数据处理平台。&lt;/p&gt;
&lt;p&gt;　　第十五条  广告需求方平台经营者、媒介方平台经营者、广告信息交换平台经营者以及媒介方平台的成员，在订立互联网广告合同时，应当查验合同相对方的主体身份证明文件、真实名称、地址和有效联系方式等信息，建立登记档案并定期核实更新。&lt;/p&gt;
&lt;p&gt;　　媒介方平台经营者、广告信息交换平台经营者以及媒介方平台成员，对其明知或者应知的违法广告，应当采取删除、屏蔽、断开链接等技术措施和管理措施，予以制止。&lt;/p&gt;
&lt;p&gt;　　第十六条  互联网广告活动中不得有下列行为：&lt;/p&gt;
&lt;p&gt;　　（一）提供或者利用应用程序、硬件等对他人正当经营的广告采取拦截、过滤、覆盖、快进等限制措施；&lt;/p&gt;
&lt;p&gt;　　（二）利用网络通路、网络设备、应用程序等破坏正常广告数据传输，篡改或者遮挡他人正当经营的广告，擅自加载广告；&lt;/p&gt;
&lt;p&gt;　　（三）利用虚假的统计数据、传播效果或者互联网媒介价值，诱导错误报价，谋取不正当利益或者损害他人利益。&lt;/p&gt;
&lt;p&gt;　　第十七条  未参与互联网广告经营活动，仅为互联网广告提供信息服务的互联网信息服务提供者，对其明知或者应知利用其信息服务发布违法广告的，应当予以制止。&lt;/p&gt;
&lt;p&gt;　　第十八条  对互联网广告违法行为实施行政处罚，由广告发布者所在地工商行政管理部门管辖。广告发布者所在地工商行政管理部门管辖异地广告主、广告经营者有困难的，可以将广告主、广告经营者的违法情况移交广告主、广告经营者所在地工商行政管理部门处理。&lt;/p&gt;
&lt;p&gt;　　广告主所在地、广告经营者所在地工商行政管理部门先行发现违法线索或者收到投诉、举报的，也可以进行管辖。&lt;/p&gt;
&lt;p&gt;　　对广告主自行发布的违法广告实施行政处罚，由广告主所在地工商行政管理部门管辖。&lt;/p&gt;
&lt;p&gt;　　第十九条  工商行政管理部门在查处违法广告时，可以行使下列职权：&lt;/p&gt;
&lt;p&gt;　　（一）对涉嫌从事违法广告活动的场所实施现场检查；&lt;/p&gt;
&lt;p&gt;　　（二）询问涉嫌违法的有关当事人，对有关单位或者个人进行调查；&lt;/p&gt;
&lt;p&gt;　　（三）要求涉嫌违法当事人限期提供有关证明文件；&lt;/p&gt;
&lt;p&gt;　　（四）查阅、复制与涉嫌违法广告有关的合同、票据、账簿、广告作品和互联网广告后台数据，采用截屏、页面另存、拍照等方法确认互联网广告内容；&lt;/p&gt;
&lt;p&gt;　　（五）责令暂停发布可能造成严重后果的涉嫌违法广告。&lt;/p&gt;
&lt;p&gt;　　工商行政管理部门依法行使前款规定的职权时，当事人应当协助、配合，不得拒绝、阻挠或者隐瞒真实情况。&lt;/p&gt;
&lt;p&gt;　　第二十条  工商行政管理部门对互联网广告的技术监测记录资料，可以作为对违法的互联网广告实施行政处罚或者采取行政措施的电子数据证据。&lt;/p&gt;
&lt;p&gt;　　第二十一条  违反本办法第五条第一款规定，利用互联网广告推销禁止生产、销售的产品或者提供的服务，或者禁止发布广告的商品或者服务的，依照广告法第五十七条第五项的规定予以处罚；违反第二款的规定，利用互联网发布处方药、烟草广告的，依照广告法第五十七条第二项、第四项的规定予以处罚。&lt;/p&gt;
&lt;p&gt;　　第二十二条  违反本办法第六条规定，未经审查发布广告的，依照广告法第五十八条第一款第十四项的规定予以处罚。&lt;/p&gt;
&lt;p&gt;　　第二十三条  互联网广告违反本办法第七条规定，不具有可识别性的，依照广告法第五十九条第三款的规定予以处罚。&lt;/p&gt;
&lt;p&gt;　　第二十四条  违反本办法第八条第一款规定，利用互联网发布广告，未显著标明关闭标志并确保一键关闭的，依照广告法第六十三条第二款的规定进行处罚；违反第二款、第三款规定，以欺骗方式诱使用户点击广告内容的，或者未经允许，在用户发送的电子邮件中附加广告或者广告链接的，责令改正，处一万元以上三万元以下的罚款。&lt;/p&gt;
&lt;p&gt;　　第二十五条  违反本办法第十二条第一款、第二款规定，互联网广告发布者、广告经营者未按照国家有关规定建立、健全广告业务管理制度的，或者未对广告内容进行核对的，依照广告法第六十一条第一款的规定予以处罚。&lt;/p&gt;
&lt;p&gt;　　第二十六条  有下列情形之一的，责令改正，处一万元以上三万元以下的罚款：&lt;/p&gt;
&lt;p&gt;　　（一）广告需求方平台经营者违反本办法第十三条第二款规定，通过程序化购买方式发布的广告未标明来源的；&lt;/p&gt;
&lt;p&gt;　　（二）媒介方平台经营者、广告信息交换平台经营者以及媒介方平台成员，违反本办法第十五条第一款、第二款规定，未履行相关义务的。&lt;/p&gt;
&lt;p&gt;　　第二十七条  违反本办法第十七条规定，互联网信息服务提供者明知或者应知互联网广告活动违法不予制止的，依照广告法第六十四条规定予以处罚。&lt;/p&gt;
&lt;p&gt;　　第二十八条  工商行政管理部门依照广告法和本办法规定所做出的行政处罚决定，应当通过企业信用信息公示系统依法向社会公示。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;**国家工商行政管理总局令&lt;br&gt;第87号&lt;/p&gt;
&lt;p&gt;　　《互联网广告管理暂行办法》已经国家工商行政管理总局局务会议审议通过，现予公布，自2016年9月1日起施行。 &lt;/p&gt;
&lt;p&gt;　　局长 张茅&lt;/p&gt;
&lt;p&gt;　　2016年7月4日&lt;/p&gt;
&lt;p&gt;互联网广告管理暂行办
    
    </summary>
    
    
      <category term="2016新广告法" scheme="http://blog.benhuang1024.com/tags/2016%E6%96%B0%E5%B9%BF%E5%91%8A%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title> HTML5 postMessage 和 onmessage API 详细应用</title>
    <link href="http://blog.benhuang1024.com/2016/02/24/HTML5-postMessage-%E5%92%8C-onmessage-API-%E8%AF%A6%E7%BB%86%E5%BA%94%E7%94%A8/"/>
    <id>http://blog.benhuang1024.com/2016/02/24/HTML5-postMessage-和-onmessage-API-详细应用/</id>
    <published>2016-02-24T03:01:37.000Z</published>
    <updated>2016-05-27T03:08:47.749Z</updated>
    
    <content type="html">&lt;p&gt;至 2008 年 W3C 制定出第一个 HTML5 草案开始，HTML5 承载了越来越多崭新的特性和功能。它不但强化了 Web 系统或网页的表现性能，而且还增加了对本地数据库等 Web 应用功能的支持。其中，最重要的一个便是对多线程的支持。在 HTML5 中提出了工作线程（Web Workers）的概念，并且规范出 Web Workers 的三大主要特征：能够长时间运行（响应），理想的启动性能以及理想的内存消耗。Web Workers 允许开发人员编写能够长时间运行而不被用户所中断的后台程序，去执行事务或者逻辑，并同时保证页面对用户的及时响应。&lt;br&gt;Web Workers 为 Web 前端网页上的脚本提供了一种能在后台进程中运行的方法。一旦它被创建，Web Workers 就可以通过 postMessage 向任务池发送任务请求，执行完之后再通过 postMessage 返回消息给创建者指定的事件处理程序 ( 通过 onmessage 进行捕获 )。Web Workers 进程能够在不影响用户界面的情况下处理任务，并且，它还可以使用 XMLHttpRequest 来处理 I/O，但通常，后台进程（包括 Web Workers 进程）不能对 DOM 进行操作。如果希望后台程序处理的结果能够改变 DOM，只能通过返回消息给创建者的回调函数进行处理。&lt;br&gt;浏览器对 HTML5 支持情况可以参考网站 When can I use…&lt;br&gt;在 Web Workers 中使用 postMessage 和 onmessage&lt;br&gt;首先，需要在客户端页面的 JavaScript 代码中 new 一个 Worker 实例出来，参数是需要在另一个线程中运行的 JavaScript 文件名称。然后在这个实例上监听 onmessage 事件。最后另一个线程中的 JavaScript 就可以通过调用 postMessage 方法在这两个线程间传递数据了。&lt;br&gt;清单 1. 主线程中创建 Worker 实例，并监听 onmessage 事件&lt;br&gt;&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;html&lt;/span&gt;&amp;gt;&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;head&lt;/span&gt;&amp;gt;&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;meta&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;http-equiv&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;Content-Type&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;content&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;text/html; charset=iso-8859-1&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;title&lt;/span&gt;&amp;gt;&lt;/span&gt;Test Web worker&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;title&lt;/span&gt;&amp;gt;&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;text/JavaScript&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;javascript&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;init&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; worker = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Worker(&lt;span class=&quot;string&quot;&gt;&#39;compute.js&#39;&lt;/span&gt;); &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;comment&quot;&gt;//event 参数中有 data 属性，就是子线程中返回的结果数据&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                worker.onmessage= &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;event&lt;/span&gt;) &lt;/span&gt;&amp;#123; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        &lt;span class=&quot;comment&quot;&gt;// 把子线程返回的结果添加到 div 上&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        &lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.getElementById(&lt;span class=&quot;string&quot;&gt;&quot;result&quot;&lt;/span&gt;).innerHTML += &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                           event.data+&lt;span class=&quot;string&quot;&gt;&quot;&amp;lt;br/&amp;gt;&quot;&lt;/span&gt;; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;#125;; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;head&lt;/span&gt;&amp;gt;&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;body&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;onload&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;init()&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;result&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;body&lt;/span&gt;&amp;gt;&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;html&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;在客户端的 compute.js 中，只是简单的重复多次加和操作，最后通过 postMessage 方法把结果返回给主线程，目的就是等待一段时间。而在这段时间内，主线程不应该被阻塞，用户可以通过拖拽浏览器，变大缩小浏览器窗口等操作测试这一现象。这个非阻塞主线程的结果就是 Web Workers 想达到的目的。&lt;br&gt;清单 2. compute.js 中调用 postMessage 方法返回计算结果&lt;br&gt;&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; i=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;timedCount&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; j=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,sum=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;j&amp;lt;&lt;span class=&quot;number&quot;&gt;100&lt;/span&gt;;j++)&amp;#123; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; i=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;i&amp;lt;&lt;span class=&quot;number&quot;&gt;100000000&lt;/span&gt;;i++)&amp;#123; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        sum+=i; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;#125; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// 调用 postMessage 向主线程发送消息&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        postMessage(sum); &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;postMessage(&lt;span class=&quot;string&quot;&gt;&quot;Before computing,&quot;&lt;/span&gt;+&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;Date&lt;/span&gt;()); &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;timedCount(); &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;postMessage(&lt;span class=&quot;string&quot;&gt;&quot;After computing,&quot;&lt;/span&gt;+&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;Date&lt;/span&gt;());&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;图 1. 浏览器中运行结果&lt;br&gt;浏览器中运行结果&lt;br&gt;Cross-document messaging&lt;br&gt;Cross-document messaging 简介&lt;br&gt;由于同源策略的限制，JavaScript 跨域的问题，一直是一个颇为棘手的问题。HTML5 提供了在网页文档之间互相接收与发送信息的功能。使用这个功能，只要获取到网页所在窗口对象的实例，不仅同源（域 + 端口号）的 Web 网页之间可以互相通信，甚至可以实现跨域通信。 要想接收从其他窗口发送来的信息，必须对窗口对象的 onmessage 事件进行监听，其它窗口可以通过 postMessage 方法来传递数据。该方法使用两个参数：第一个参数为所发送的消息文本，但也可以是任何 JavaScript 对象（通过 JSON 转换对象为文本），第二个参数为接收消息的对象窗口的 URL 地址，可以在 URL 地址字符串中使用通配符’*’指定全部地。&lt;br&gt;在 Cross-document messaging 中使用 postMessage 和 onmessage&lt;br&gt;为了实现不同域之间的通信，需要在操作系统的 hosts 文件添加两个域名，进行模拟。&lt;br&gt;清单 3. hosts 文件中添加两个不同的域名&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;127.0.0.1     parent.com &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;127.0.0.1       child.com&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;在父网页中通过 iframe 嵌入子页面，并在 JavaScript 代码中调用 postMessage 方法发送数据到子窗口。&lt;br&gt;清单 4. 父页面中嵌入子页面，调用 postMessage 方法发送数据&lt;br&gt;&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;html&lt;/span&gt;&amp;gt;&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;head&lt;/span&gt;&amp;gt;&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;meta&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;http-equiv&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;Content-Type&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;content&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;text/html; charset=UTF-8&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;title&lt;/span&gt;&amp;gt;&lt;/span&gt;Test Cross-domain communication using HTML5&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;title&lt;/span&gt;&amp;gt;&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;text/JavaScript&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;javascript&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;sendIt&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;comment&quot;&gt;// 通过 postMessage 向子窗口发送数据&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.getElementById(&lt;span class=&quot;string&quot;&gt;&quot;otherPage&quot;&lt;/span&gt;).contentWindow &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        .postMessage( &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                &lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.getElementById(&lt;span class=&quot;string&quot;&gt;&quot;message&quot;&lt;/span&gt;).value, &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                               &lt;span class=&quot;string&quot;&gt;&quot;http://child.com:8080&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        ); &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;head&lt;/span&gt;&amp;gt;&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;body&lt;/span&gt;&amp;gt;&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;&amp;lt;!-- 通过 iframe 嵌入子页面 --&amp;gt;&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;iframe&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;src&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;http://child.com:8080/TestHTML5/other-domain.html&quot;&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                &lt;span class=&quot;attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;otherPage&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;iframe&lt;/span&gt;&amp;gt;&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;br&lt;/span&gt;/&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;br&lt;/span&gt;/&amp;gt;&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;input&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;text&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;message&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;input&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;button&quot;&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        &lt;span class=&quot;attr&quot;&gt;value&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;Send to child.com&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;onclick&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;sendIt()&quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;body&lt;/span&gt;&amp;gt;&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;html&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;在子窗口中监听 onmessage 事件，并用 JavaScript 实现显示父窗口发送过来的数据。&lt;br&gt;清单 5. 子窗口中监听 onmessage 事件，显示父窗口发送来的数据&lt;br&gt;&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;html&lt;/span&gt;&amp;gt;&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;head&lt;/span&gt;&amp;gt;&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;meta&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;http-equiv&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;Content-Type&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;content&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;text/html; charset=UTF-8&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;title&lt;/span&gt;&amp;gt;&lt;/span&gt;Web page from child.com&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;title&lt;/span&gt;&amp;gt;&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;text/JavaScript&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;javascript&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//event 参数中有 data 属性，就是父窗口发送过来的数据&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;window&lt;/span&gt;.addEventListener(&lt;span class=&quot;string&quot;&gt;&quot;message&quot;&lt;/span&gt;, &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt; event &lt;/span&gt;) &lt;/span&gt;&amp;#123; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;comment&quot;&gt;// 把父窗口发送过来的数据显示在子窗口中&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          &lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.getElementById(&lt;span class=&quot;string&quot;&gt;&quot;content&quot;&lt;/span&gt;).innerHTML+=event.data+&lt;span class=&quot;string&quot;&gt;&quot;&amp;lt;br/&amp;gt;&quot;&lt;/span&gt;; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;, &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt; ); &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;head&lt;/span&gt;&amp;gt;&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;body&lt;/span&gt;&amp;gt;&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        Web page from http://child.com:8080 &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;content&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;body&lt;/span&gt;&amp;gt;&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;html&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;图 2. 父窗口嵌入子窗口&lt;br&gt;父窗口嵌入子窗口&lt;br&gt;图 3. 父窗口发送数据到子窗口&lt;br&gt;父窗口发送数据到子窗口&lt;br&gt;WebSockets&lt;br&gt;WebSockets 简介&lt;br&gt;在 Web 应用中，HTTP 协议决定了客户端和服务端连接是短连接，即客户端 Request，服务端 Response，连接断开。要想实现客户端和服务端实时通信，只能通过客户端轮询来实现。服务端推送数据也并不是字面上意思上的直接推，其实还是客户端自己取。WebSockets 是 HTML5 规范新引入的功能，用于解决浏览器与后台服务器双向通讯的问题，使用 WebSockets 技术，后台可以随时向前端推送消息，以保证前后台状态统一。&lt;br&gt;在 WebSockets 中使用 send 和 onmessage&lt;br&gt;由于文本主要介绍 postMessage(send) 和 onmessage 客户端 API 的应用，而 WebSockets 涉及到服务器端代码的实现，所以本文将选取最简单的服务器端框架来编写服务器代码。WebSockets 服务器端有 jetty 提供的基于 Java 的实现，有 WebSocket-Node 基于 Node.js 的实现，在 .Net 4.5 中也直接提供了 WebSockets 的支持。本文将使用 WebSocket-Node 提供的示例代码，稍作修改作为 WebSockets 的服务器端。关于 node.js 的介绍以及使用请参考 node.js 官方网站 node.js，关于 WebSocket-Node 的使用请参考 WebSocket-Node。&lt;br&gt;首先，需要在客户端通过 JavaScript 代码 new 一个 WebSocket 实例出来，参数是实现 WebSocket 服务器端 URL 地址。然后在这个实例上监听 onmessage 事件接收服务器端发送过来的数据。当然，客户端也可以调用 send 方法，发送数据到服务器端。&lt;br&gt;清单 6. 创建 WebSocket 对象，并监听 onmessage 事件&lt;br&gt;&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;connect : &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; location =&lt;span class=&quot;string&quot;&gt;&quot;ws://localhost:8000/&quot;&lt;/span&gt;; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// 创建 WebSockets 并传入 WebSockets server 地址&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;._ws =&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; WebSocket(location); &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;._ws.onmessage=&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;._onmessage; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;//WebSockets 还提供了 onopen 以及 onclose 事件&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;._ws.onopen =&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;._onopen; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;._ws.onclose =&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;._onclose; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;在 _onmessage 方法中，接收数据，并显示在页面上&lt;br&gt;清单 7. _onmessage 方法&lt;br&gt;&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;_onmessage : &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;event&lt;/span&gt;) &lt;/span&gt;&amp;#123; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//event 参数中有 data 属性，就是服务器发送过来的数据&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (event.data) &amp;#123; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; messageBox = &lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.getElementById(&lt;span class=&quot;string&quot;&gt;&#39;messageBox&#39;&lt;/span&gt;); &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; spanText = &lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.createElement(&lt;span class=&quot;string&quot;&gt;&#39;span&#39;&lt;/span&gt;); &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        spanText.className =&lt;span class=&quot;string&quot;&gt;&#39;text&#39;&lt;/span&gt;; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;comment&quot;&gt;// 把服务器发送过来的数据显示在窗口中&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        spanText.innerHTML = event.data; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; lineBreak = &lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.createElement(&lt;span class=&quot;string&quot;&gt;&#39;br&#39;&lt;/span&gt;); &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        messageBox.appendChild(spanText); &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        messageBox.appendChild(lineBreak); &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        messageBox.scrollTop = messageBox.scrollHeight &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                - messageBox.clientHeight; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;在 _onopen 方法中，调用 _send 方法发送一条消息到服务器端，告之连接已经建立。在 _onclose 方法中，把 WebSocket 的实例设置成 null，释放资源。&lt;br&gt;清单 8. _onopen，_onclose 以及 send 方法&lt;br&gt;&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;_onopen : &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    server._send(&lt;span class=&quot;string&quot;&gt;&quot;Client:Open WebSockets,&quot;&lt;/span&gt;+&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;Date&lt;/span&gt;()); &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;, &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//message 参数就是客户端向服务器端发送的数据&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;_send : &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;message&lt;/span&gt;) &lt;/span&gt;&amp;#123; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;._ws) &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;._ws.send(message); &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;, &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 此方法提供外部代码调用&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;send : &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;text&lt;/span&gt;) &lt;/span&gt;&amp;#123; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (text !=&lt;span class=&quot;literal&quot;&gt;null&lt;/span&gt;&amp;amp;&amp;amp; text.length &amp;gt;&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        server._send(text); &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;, &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;_onclose : &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;m&lt;/span&gt;) &lt;/span&gt;&amp;#123; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;._ws =&lt;span class=&quot;literal&quot;&gt;null&lt;/span&gt;; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;把这些方法封装在一个 server 对象中，方便提供外部调用。用户只需要先调用 server 的 connect 方法建立连接，然后调用 send 方法发送数据。&lt;br&gt;清单 9. 封装客户端实现&lt;br&gt;&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; server = &amp;#123; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// 对外主要提供 connect 和 send 方法&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   connect : &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;...&amp;#125;, &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   _onopen : &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;...&amp;#125;, &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   _send : &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;message&lt;/span&gt;) &lt;/span&gt;&amp;#123;...&amp;#125;, &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   send : &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;text&lt;/span&gt;) &lt;/span&gt;&amp;#123;...&amp;#125;, &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   _onmessage : &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;event&lt;/span&gt;) &lt;/span&gt;&amp;#123;...&amp;#125;, &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   _onclose : &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;m&lt;/span&gt;) &lt;/span&gt;&amp;#123;...&amp;#125; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;在服务器端，通过 JavaScript 语言简单修改 WebSocket-Node 中提供的 echo-server.js 示例即可。这里只展示关键代码部分，其它代码请参见 WebSocket-Node 示例。&lt;br&gt;清单 10. WebSockets 服务器端简单实现&lt;br&gt; // 监听客户端的连接请求&lt;br&gt;&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;wsServer.on(&lt;span class=&quot;string&quot;&gt;&#39;connect&#39;&lt;/span&gt;, &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;connection&lt;/span&gt;) &lt;/span&gt;&amp;#123; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;sendCallback&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;err&lt;/span&gt;) &lt;/span&gt;&amp;#123; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (err) &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.error(&lt;span class=&quot;string&quot;&gt;&quot;send() error: &quot;&lt;/span&gt; + err); &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &amp;#125; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// 监听客户端发送数据的请求&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   connection.on(&lt;span class=&quot;string&quot;&gt;&#39;message&#39;&lt;/span&gt;, &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;message&lt;/span&gt;) &lt;/span&gt;&amp;#123; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (message.type === &lt;span class=&quot;string&quot;&gt;&#39;utf8&#39;&lt;/span&gt;) &amp;#123;&lt;span class=&quot;comment&quot;&gt;// 区别客户端发过来的数据是文本还是二进制类型&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           connection.sendUTF( &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                               &lt;span class=&quot;string&quot;&gt;&quot;Server:Get message:&amp;lt;br/&amp;gt;&quot;&lt;/span&gt;+message.utf8Data, sendCallback &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        ); &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &amp;#125; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (message.type === &lt;span class=&quot;string&quot;&gt;&#39;binary&#39;&lt;/span&gt;) &amp;#123; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           connection.sendBytes(message.binaryData, sendCallback); &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &amp;#125; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &amp;#125;); &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   connection.on(&lt;span class=&quot;string&quot;&gt;&#39;close&#39;&lt;/span&gt;, &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;reasonCode, description&lt;/span&gt;) &lt;/span&gt;&amp;#123; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &amp;#125;); &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;图 4. 点击 Connect 按钮&lt;br&gt;点击 Connect 按钮&lt;br&gt;图 5. 输入内容，单击 Send Message 按钮&lt;br&gt;输入内容，单击 Send Message 按钮&lt;br&gt;Server-Sent Events&lt;br&gt;Server-Sent Events 简介&lt;br&gt;HTML5 Server-Sent 事件模型允许您从服务器 push 实时数据到浏览器。本文我们将介绍利用 Eventsource 对象处理与页面间的接收和发送数据。在客户端，我们使用 HTML5+JavaScript，服务端使用 Java。在现存的 Ajax 模式中，web 页面会持续不断地请求服务器传输新数据，由客户端负责请求数据。而在服务端发送模式下，无需在客户端代码中执行连续的数据请求，而是由服务端 push 推送更新。一旦您在页面中初始化了 Server-Sent 事件，服务端脚本将持续地发送更新。客户端 JavaScript 代码一旦接收到更新就将新的数据写入页面中展示出来。&lt;br&gt;在 Server-Sent Events 中使用 onmessage&lt;br&gt;Server-Sent Events 和 WebSockets 有相同之处，WebSockets 实现了服务器端以及客户端的双向通信功能，而 Server-Sent Events 则仅是指服务器端到客户端的单向通信，而且 Server-Sent Events 同样需要服务器端的实现，本文将使用基于 Java 的 Servlet 技术实现服务器端。关于服务器端向客户端写数据的格式，可以参考 W3C 关于 Server-Sent Events 的规范文档 Server-Sent Events。由于是服务器端到客户端的单向通信，所以在 Server-Sent Events 中没有 postMessage 方法。&lt;br&gt;首先，在客户端通过 JavaScript 代码 new 一个 EventSource 实例出来，参数是实现 EventSource 服务器端 URL 地址。然后在这个实例上监听 onmessage 事件接收服务器端发送过来的数据。&lt;br&gt;清单 11. 创建 EventSource 对象，并监听 onmessage 事件&lt;br&gt;&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!!&lt;span class=&quot;built_in&quot;&gt;window&lt;/span&gt;.EventSource) &amp;#123; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 创建 EventSource 实例，传入 server 地址&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; source = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; EventSource(&lt;span class=&quot;string&quot;&gt;&#39;/TestHTML5/ServerSentEvent&#39;&lt;/span&gt;); &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125; &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &amp;#123; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&quot;Your browser doesn&#39;t support server-sent event&quot;&lt;/span&gt;); &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 监听 message 事件，等待接收服务器端发送过来的数据&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;source.addEventListener(&lt;span class=&quot;string&quot;&gt;&#39;message&#39;&lt;/span&gt;, &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;event&lt;/span&gt;) &lt;/span&gt;&amp;#123; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;comment&quot;&gt;//event 参数中有 data 属性，就是服务器发送过来的数据&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(event.data); &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;, &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;); &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//EventSource 还提供了 onopen 以及 onerror 事件&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;source.addEventListener(&lt;span class=&quot;string&quot;&gt;&#39;open&#39;&lt;/span&gt;, &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;event&lt;/span&gt;) &lt;/span&gt;&amp;#123; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;, &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;); &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;source.addEventListener(&lt;span class=&quot;string&quot;&gt;&#39;error&#39;&lt;/span&gt;, &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;event&lt;/span&gt;) &lt;/span&gt;&amp;#123; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (event.readyState == EventSource.CLOSED) &amp;#123; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         &amp;#125; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;, &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;服务器端，在 Java 语言实现的 Servlet doGet 方法中使用 response 对象向客户端写数据&lt;br&gt;清单 10. 服务器端简单实现&lt;br&gt;&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 这里必须设置 Content-Type 为 text/event-stream &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;response.setHeader(&lt;span class=&quot;string&quot;&gt;&quot;Content-Type&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;text/event-stream&quot;&lt;/span&gt;); &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;response.setHeader(&lt;span class=&quot;string&quot;&gt;&quot;Cache-Control&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;no-cache&quot;&lt;/span&gt;); &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;response.setCharacterEncoding (&lt;span class=&quot;string&quot;&gt;&quot;UTF-8&quot;&lt;/span&gt;); &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;String&lt;/span&gt; id = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;Date&lt;/span&gt;().toString(); &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;response.getWriter().println(&lt;span class=&quot;string&quot;&gt;&quot;id:&quot;&lt;/span&gt;+id); &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 向客户端写两行数据&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;response.getWriter().println(&lt;span class=&quot;string&quot;&gt;&quot;data:server-sent event is working.&quot;&lt;/span&gt;); &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;response.getWriter().println(&lt;span class=&quot;string&quot;&gt;&quot;data:test server-sent event multi-line data&quot;&lt;/span&gt;); &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;response.getWriter().println(); &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;response.getWriter().flush();&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;图 6. Server-Sent Events 运行结果&lt;br&gt;Server-Sent Events 运行结果&lt;br&gt;结束语&lt;br&gt;本文详细介绍了 postMessage（send）和 onmessage API 在客户端的应用情况，可以看到在不同的场景中这两个方法的应用模式都是类似的。postMessage 的作用就是传递数据，而 onmessage 的作用就是接收数据。掌握此组 API 对以后开发 HTML 5 应用程序将会有所帮助。本文 Web Workers，Cross-document messaging，WebSockets 的代码在 Firefox 14 下通过测试，Server-Sent Events 的代码在 Chrome 16 下通过测试。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;至 2008 年 W3C 制定出第一个 HTML5 草案开始，HTML5 承载了越来越多崭新的特性和功能。它不但强化了 Web 系统或网页的表现性能，而且还增加了对本地数据库等 Web 应用功能的支持。其中，最重要的一个便是对多线程的支持。在 HTML5 中提出了工作线程（
    
    </summary>
    
    
      <category term="html5" scheme="http://blog.benhuang1024.com/tags/html5/"/>
    
      <category term="api" scheme="http://blog.benhuang1024.com/tags/api/"/>
    
  </entry>
  
  <entry>
    <title>PHP 浮点数计算比较及取整不准确的解决方法</title>
    <link href="http://blog.benhuang1024.com/2015/11/25/PHP-%E6%B5%AE%E7%82%B9%E6%95%B0%E8%AE%A1%E7%AE%97%E6%AF%94%E8%BE%83%E5%8F%8A%E5%8F%96%E6%95%B4%E4%B8%8D%E5%87%86%E7%A1%AE%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/"/>
    <id>http://blog.benhuang1024.com/2015/11/25/PHP-浮点数计算比较及取整不准确的解决方法/</id>
    <published>2015-11-25T02:53:50.000Z</published>
    <updated>2016-05-27T07:42:52.493Z</updated>
    
    <content type="html">&lt;p&gt;PHP 浮点数计算比较及取整不准确的解决方法&lt;br&gt;浮点数计算结果比较&lt;br&gt;一则浮点数计算例子如下：&lt;br&gt;&lt;figure class=&quot;highlight php&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$a = &lt;span class=&quot;number&quot;&gt;0.2&lt;/span&gt;+&lt;span class=&quot;number&quot;&gt;0.7&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$b = &lt;span class=&quot;number&quot;&gt;0.9&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;var_dump($a == $b);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;打印出的结果是：bool(false)。也就是说在这里 0.2+0.7 的计算结果与 0.9 并不相等，这显然是有违我们的常识的。&lt;br&gt;对此问题，PHP官方手册曾又说明：显然简单的十进制分数如 0.2 不能在不丢失一点点精度的情况下转换为内部二进制的格式。这和一个事实有关，那就是不可能精确的用有限位数表达某些十进制分数。例如，十进制的 1/3 变成了 0.3333333…。&lt;br&gt;我们将上面的变量用双精度格式打印出来：&lt;br&gt;&lt;figure class=&quot;highlight php&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$a = &lt;span class=&quot;number&quot;&gt;0.2&lt;/span&gt;+&lt;span class=&quot;number&quot;&gt;0.7&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$b = &lt;span class=&quot;number&quot;&gt;0.9&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;printf(&lt;span class=&quot;string&quot;&gt;&quot;%0.20f&quot;&lt;/span&gt;, $a);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;&amp;lt;br /&amp;gt;&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;printf(&lt;span class=&quot;string&quot;&gt;&quot;%0.20f&quot;&lt;/span&gt;, $b);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;输出结果如下：&lt;br&gt;0.89999999999999991118&lt;br&gt;0.90000000000000002220&lt;br&gt;显然在这里，实际上作为浮点型数据，其精度已经损失了一部分，达不到完全精确。所以永远不要相信浮点数结果精确到了最后一位，也永远不要比较两个浮点数是否相等。需要说明的是，这不是PHP的问题，而是计算机内部处理浮点数的问题！在 C、Java 等语言中也会遇到同样的问题。&lt;br&gt;所以要比较两个浮点数，需要将其控制在我们需要的精度范围内再行比较，因此使用 bcadd() 函数来对浮点数想加并进行精度转换（为字符串）：&lt;br&gt;&lt;figure class=&quot;highlight php&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;var_dump(bcadd(&lt;span class=&quot;number&quot;&gt;0.2&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;0.7&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;) == &lt;span class=&quot;number&quot;&gt;0.9&lt;/span&gt;);   &lt;span class=&quot;comment&quot;&gt;// 输出：bool(true)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;浮点数取整&lt;br&gt;在《PHP 取整函数 ceil 与 floor》一文中，曾有例子：&lt;br&gt;&lt;figure class=&quot;highlight php&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;&amp;lt;?php&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;echo&lt;/span&gt; ceil(&lt;span class=&quot;number&quot;&gt;2.1&lt;/span&gt;/&lt;span class=&quot;number&quot;&gt;0.7&lt;/span&gt;);    &lt;span class=&quot;comment&quot;&gt;// 输出：4&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;?&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;经过上面对浮点数计算的探讨，知道这是浮点数计算结果不完全精确造成的：&lt;br&gt;&lt;figure class=&quot;highlight php&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;&amp;lt;?php&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;printf(&lt;span class=&quot;string&quot;&gt;&quot;%0.20f&quot;&lt;/span&gt;, (&lt;span class=&quot;number&quot;&gt;2.1&lt;/span&gt;/&lt;span class=&quot;number&quot;&gt;0.7&lt;/span&gt;));    &lt;span class=&quot;comment&quot;&gt;// 输出：3.00000000000000044409&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;?&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;经过上面对浮点数计算的探讨，知道这是浮点数计算结果不完全精确造成的，因此使用 round() 函数处理一下即可：&lt;br&gt;&lt;figure class=&quot;highlight php&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;&amp;lt;?php&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;echo&lt;/span&gt; ceil( round((&lt;span class=&quot;number&quot;&gt;2.1&lt;/span&gt;/&lt;span class=&quot;number&quot;&gt;0.7&lt;/span&gt;),&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;) );&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;?&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;虽然 round() 函数是按照指定的精度进行四舍五入，但保留小数点后一位，对我们的取整结果是没影响的。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;PHP 浮点数计算比较及取整不准确的解决方法&lt;br&gt;浮点数计算结果比较&lt;br&gt;一则浮点数计算例子如下：&lt;br&gt;&lt;figure class=&quot;highlight php&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line
    
    </summary>
    
    
      <category term="php" scheme="http://blog.benhuang1024.com/tags/php/"/>
    
      <category term="float" scheme="http://blog.benhuang1024.com/tags/float/"/>
    
  </entry>
  
  <entry>
    <title>项目的前后期</title>
    <link href="http://blog.benhuang1024.com/2015/01/08/%E9%A1%B9%E7%9B%AE%E7%9A%84%E5%89%8D%E5%90%8E%E6%9C%9F/"/>
    <id>http://blog.benhuang1024.com/2015/01/08/项目的前后期/</id>
    <published>2015-01-08T02:48:54.000Z</published>
    <updated>2016-05-27T02:51:44.480Z</updated>
    
    <content type="html">&lt;p&gt;一个项目在前期支持用面相对象，减少用面相过程。&lt;/p&gt;
&lt;p&gt;特别是在项目需要在后期维护，进行方法重置的时候。&lt;/p&gt;
&lt;p&gt;如果一个项目不需要重构，初次就能定版，那就任性的面相过程吧，&lt;/p&gt;
&lt;p&gt;到项目经理，改需求的时候，夜里明亮的都是程序猿.&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;一个项目在前期支持用面相对象，减少用面相过程。&lt;/p&gt;
&lt;p&gt;特别是在项目需要在后期维护，进行方法重置的时候。&lt;/p&gt;
&lt;p&gt;如果一个项目不需要重构，初次就能定版，那就任性的面相过程吧，&lt;/p&gt;
&lt;p&gt;到项目经理，改需求的时候，夜里明亮的都是程序猿.&lt;/p&gt;

    
    </summary>
    
    
      <category term="重构" scheme="http://blog.benhuang1024.com/tags/%E9%87%8D%E6%9E%84/"/>
    
      <category term="需求" scheme="http://blog.benhuang1024.com/tags/%E9%9C%80%E6%B1%82/"/>
    
      <category term="技术心得" scheme="http://blog.benhuang1024.com/tags/%E6%8A%80%E6%9C%AF%E5%BF%83%E5%BE%97/"/>
    
  </entry>
  
  <entry>
    <title>node.js运行HelloWorld</title>
    <link href="http://blog.benhuang1024.com/2014/10/29/node-js%E8%BF%90%E8%A1%8CHelloWorld/"/>
    <id>http://blog.benhuang1024.com/2014/10/29/node-js运行HelloWorld/</id>
    <published>2014-10-29T02:20:22.000Z</published>
    <updated>2016-05-27T02:23:49.422Z</updated>
    
    <content type="html">&lt;p&gt;Win下 node.js入门，创建Helloword&lt;/p&gt;
&lt;p&gt;1.从官网下载安装包&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.nodejs.org/download/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.nodejs.org/download/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;2.安装Node.js&lt;/p&gt;
&lt;p&gt;3.在node.js根目录下，创建项目文件 /helloworld&lt;/p&gt;
&lt;p&gt;4.在helloworld下，编写文件helloworld.js&lt;br&gt;&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&#39;helloworld.js&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;5.运行命令行&lt;/p&gt;
&lt;p&gt;-》//输入node,就进入node.js的终端（node.js直接配置好了环境变量，大爱）&lt;/p&gt;
&lt;p&gt;6.切换至项目目录（这步至关重要）&lt;/p&gt;
&lt;p&gt;7.运行命令&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;node helloworld.js&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;Win下 node.js入门，创建Helloword&lt;/p&gt;
&lt;p&gt;1.从官网下载安装包&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.nodejs.org/download/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.n
    
    </summary>
    
    
      <category term="node.js" scheme="http://blog.benhuang1024.com/tags/node-js/"/>
    
      <category term="hello" scheme="http://blog.benhuang1024.com/tags/hello/"/>
    
  </entry>
  
  <entry>
    <title>ajax长轮播，后台推送请求</title>
    <link href="http://blog.benhuang1024.com/2014/10/17/ajax%E9%95%BF%E8%BD%AE%E6%92%AD%EF%BC%8C%E5%90%8E%E5%8F%B0%E6%8E%A8%E9%80%81%E8%AF%B7%E6%B1%82/"/>
    <id>http://blog.benhuang1024.com/2014/10/17/ajax长轮播，后台推送请求/</id>
    <published>2014-10-17T02:04:47.000Z</published>
    <updated>2016-08-19T01:01:45.728Z</updated>
    
    <content type="html">&lt;p&gt;&lt;strong&gt;ajax长轮播，后台推送请求&lt;/strong&gt;&lt;br&gt;用于后台推送数据，处理后可以进行浏览器的控制&lt;/p&gt;
&lt;p&gt;用session区分客户端，根据对session的操作来处理客户端&lt;/p&gt;
&lt;p&gt;本考虑用Node.js或者html5的推送，因时间有限&lt;/p&gt;
&lt;p&gt;js处理部分&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;al&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;setTimeout(&lt;span class=&quot;string&quot;&gt;&quot;alert()&quot;&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;3000&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;alert&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;argument&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  $.ajax(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;               type: &lt;span class=&quot;string&quot;&gt;&#39;GET&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;               &lt;span class=&quot;keyword&quot;&gt;async&lt;/span&gt;: &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;               url: &lt;span class=&quot;string&quot;&gt;&quot;http://push.com/index.php&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;               data: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                 &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    url: &lt;span class=&quot;string&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;               &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;               success: &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;a&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(a)&amp;#123;                                       &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(a);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                al();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;#125;&lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;&amp;#123;   &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&#39;error&#39;&lt;/span&gt;);            &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                al();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;               error: &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          &amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;al();&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;PHP部分&lt;/p&gt;
&lt;p&gt;开启session&lt;/p&gt;
&lt;p&gt;session的信息存储到数据库中&lt;/p&gt;
&lt;p&gt;对数据库操作&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;ajax长轮播，后台推送请求&lt;/strong&gt;&lt;br&gt;用于后台推送数据，处理后可以进行浏览器的控制&lt;/p&gt;
&lt;p&gt;用session区分客户端，根据对session的操作来处理客户端&lt;/p&gt;
&lt;p&gt;本考虑用Node.js或者html5的推送，因时间有限&lt;/p&gt;
    
    </summary>
    
    
      <category term="ajax" scheme="http://blog.benhuang1024.com/tags/ajax/"/>
    
      <category term="js" scheme="http://blog.benhuang1024.com/tags/js/"/>
    
      <category term="session" scheme="http://blog.benhuang1024.com/tags/session/"/>
    
  </entry>
  
</feed>
